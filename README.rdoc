= HTTPI

HTTPI provides a common interface for Ruby HTTP libraries.

== Installation

The gem is available through {Rubygems}[http://rubygems.org/gems/httpi] and can be installed via:

  $ gem install httpi

== Basic examples

Creating the most basic request object and executing an HTTP GET request:

  request = HTTPI::Request.new :url => "http://example.com"
  HTTPI::Client.get request

The most basic HTTP POST request:

  request = HTTPI::Request.new
  request.url = "http://post.example.com"
  request.body = "send me"

  HTTPI::Client.post request

An HTTP GET request using HTTP basic auth and the Curb adapter:

  request = HTTPI::Request.new
  request.url = "http://auth.example.com"
  request.basic_auth "username", "password"

  HTTPI::Client.get request, :curb

== HTTPI::Request

The HTTPI::Request serves as a common denominator of options that HTTPI adapters need to support. It represents an HTTP request and contains the following options:

* [url]          the URL to access
* [proxy]        the proxy server to use
* [headers]      a Hash of HTTP headers
* [body]         the HTTP request body
* [open_timeout] the open timeout (sec)
* [read_timeout] the read timeout (sec)
* [basic_auth]   HTTP basic auth credentials

Please note, that this list is far from complete and will be extended with further options.

== HTTPI::Client

The HTTPI::Client uses one of the available adapters to execute HTTP requests. It currently supports the following request methods:

* get(request, adapter = nil)
* post(request, adapter = nil)

You can specify the adapter to use per request. Every request method returns an HTTPI::Response.

== HTTPI::Adapter

HTTPI uses adapters to support multiple HTTP libraries. It currently contains adapters for:

* {httpclient}[http://rubygems.org/gems/httpclient] ~> 2.1.5
* {curb}[http://rubygems.org/gems/curb] ~> 0.7.8

By default, HTTPI uses the HTTPClient. Changing the default is fairly easy:

  HTTPI::Adapter.use = :curb

You can find a list of supported adapters via:

  HTTPI::Adapter.adapters  # returns a Hash of supported adapters

== HTTPI::Response

Every HTTPI::Client request method returns an HTTPI::Response containing the response code, headers and body.

  response = HTTPI::Client.get request
  
  response.code     # => 200
  response.headers  # => { "Content-Encoding" => "gzip" }
  response.body     # => "<!DOCTYPE HTML PUBLIC ..."

== Participate

We appreciate any help and feedback, so please get in touch!

== TODO

Extend the HTTPI::Request to support:

* HTTP digest authentication
* SSL client authentication
